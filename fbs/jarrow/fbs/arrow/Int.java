// automatically generated by the FlatBuffers compiler, do not modify

package jarrow.fbs.arrow;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Int extends Table {
  public static Int getRootAsInt(ByteBuffer _bb) { return getRootAsInt(_bb, new Int()); }
  public static Int getRootAsInt(ByteBuffer _bb, Int obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Int __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int bitWidth() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean isSigned() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createInt(FlatBufferBuilder builder,
      int bitWidth,
      boolean is_signed) {
    builder.startObject(2);
    Int.addBitWidth(builder, bitWidth);
    Int.addIsSigned(builder, is_signed);
    return Int.endInt(builder);
  }

  public static void startInt(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addBitWidth(FlatBufferBuilder builder, int bitWidth) { builder.addInt(0, bitWidth, 0); }
  public static void addIsSigned(FlatBufferBuilder builder, boolean isSigned) { builder.addBoolean(1, isSigned, false); }
  public static int endInt(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

