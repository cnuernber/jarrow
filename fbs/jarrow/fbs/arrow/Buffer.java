// automatically generated by the FlatBuffers compiler, do not modify

package jarrow.fbs.arrow;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * ----------------------------------------------------------------------
 * A Buffer represents a single contiguous memory segment
 */
public final class Buffer extends Struct {
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Buffer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * The relative offset into the shared memory page where the bytes for this
   * buffer starts
   */
  public long offset() { return bb.getLong(bb_pos + 0); }
  /**
   * The absolute length (in bytes) of the memory buffer. The memory is found
   * from offset (inclusive) to offset + length (non-inclusive). When building
   * messages using the encapsulated IPC message, padding bytes may be written
   * after a buffer, but such padding bytes do not need to be accounted for in
   * the size here.
   */
  public long length() { return bb.getLong(bb_pos + 8); }

  public static int createBuffer(FlatBufferBuilder builder, long offset, long length) {
    builder.prep(8, 16);
    builder.putLong(length);
    builder.putLong(offset);
    return builder.offset();
  }
}

